{"ast":null,"code":"var _jsxFileName = \"I:\\\\Devops\\\\Bhargav-Yadav\\\\ReactJs\\\\http-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport http from \"./services/httpService\";\nimport config from \"./config.json\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n\n    this.handleAdd = async () => {\n      const obj = {\n        title: \"a\",\n        body: \"b\"\n      };\n      const {\n        data: post\n      } = await http.post(config.apiEndpoint, obj);\n      const posts = [post, ...this.state.posts];\n      this.setState({\n        posts\n      });\n    };\n\n    this.handleUpdate = async post => {\n      post.title = \"UPDATED\";\n      await http.put(config.apiEndpoint + \"/\" + post.id, post);\n      const posts = [...this.state.posts];\n      const index = posts.indexOf(post);\n      posts[index] = { ...post\n      };\n      this.setState({\n        posts\n      });\n    };\n\n    this.handleDelete = async post => {\n      const orignalPosts = this.state.posts;\n      const posts = this.state.posts.filter(p => p.id !== post.id);\n      this.setState({\n        posts\n      });\n\n      try {\n        await http.delete(\"s\" + config.apiEndpoint + \"/\" + post.id);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 404) alert(\"This post has already been deleted.\");\n        this.setState({\n          posts: orignalPosts\n        }); // Expected (404: not found , 400 Bad Request) - CLIENTS ERRORS\n        //  - Display a specific error message\n        //\n        // Unexpected (network down, serve down, db down, bug)\n        //  - log them\n        //  - Display a generic and friendly error message\n      }\n    };\n  }\n\n  async componentDidMount() {\n    // pending > resolved (success) OR rejected (failure)\n    const {\n      data: posts\n    } = await http.get(config.apiEndpoint);\n    this.setState({\n      posts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, this.state.posts.map(post => /*#__PURE__*/React.createElement(\"tr\", {\n      key: post.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info btn-sm\",\n      onClick: () => this.handleUpdate(post),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger btn-sm\",\n      onClick: () => this.handleDelete(post),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \"Delete\")))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["I:/Devops/Bhargav-Yadav/ReactJs/http-app/src/App.js"],"names":["React","Component","ToastContainer","http","config","App","state","posts","handleAdd","obj","title","body","data","post","apiEndpoint","setState","handleUpdate","put","id","index","indexOf","handleDelete","orignalPosts","filter","p","delete","ex","response","status","alert","componentDidMount","get","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,uCAAP;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAW1BC,SAX0B,GAWd,YAAY;AACtB,YAAMC,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAAZ;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAiB,MAAMV,IAAI,CAACU,IAAL,CAAUT,MAAM,CAACU,WAAjB,EAA8BL,GAA9B,CAA7B;AACA,YAAMF,KAAK,GAAG,CAACM,IAAD,EAAO,GAAG,KAAKP,KAAL,CAAWC,KAArB,CAAd;AACA,WAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAhByB;;AAAA,SAkB1BS,YAlB0B,GAkBX,MAAOH,IAAP,IAAgB;AAC7BA,MAAAA,IAAI,CAACH,KAAL,GAAa,SAAb;AACA,YAAMP,IAAI,CAACc,GAAL,CAASb,MAAM,CAACU,WAAP,GAAqB,GAArB,GAA2BD,IAAI,CAACK,EAAzC,EAA6CL,IAA7C,CAAN;AAEA,YAAMN,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACA,YAAMY,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcP,IAAd,CAAd;AACAN,MAAAA,KAAK,CAACY,KAAD,CAAL,GAAe,EAAE,GAAGN;AAAL,OAAf;AACA,WAAKE,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KA1ByB;;AAAA,SA4B1Bc,YA5B0B,GA4BX,MAAOR,IAAP,IAAgB;AAC7B,YAAMS,YAAY,GAAG,KAAKhB,KAAL,CAAWC,KAAhC;AAEA,YAAMA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASL,IAAI,CAACK,EAA7C,CAAd;AACA,WAAKH,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;;AAEA,UAAI;AACF,cAAMJ,IAAI,CAACsB,MAAL,CAAY,MAAMrB,MAAM,CAACU,WAAb,GAA2B,GAA3B,GAAiCD,IAAI,CAACK,EAAlD,CAAN;AACD,OAFD,CAEE,OAAOQ,EAAP,EAAW;AACX,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACEC,KAAK,CAAC,qCAAD,CAAL;AACF,aAAKd,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEe;AAAT,SAAd,EAHW,CAIX;AACA;AACA;AACA;AACA;AACA;AACD;AACF,KA/CyB;AAAA;;AAKH,QAAjBQ,iBAAiB,GAAG;AACxB;AACA,UAAM;AAAElB,MAAAA,IAAI,EAAEL;AAAR,QAAkB,MAAMJ,IAAI,CAAC4B,GAAL,CAAS3B,MAAM,CAACU,WAAhB,CAA9B;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd;AACD;;AAwCDyB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKxB,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAKE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,KAAX,CAAiB0B,GAAjB,CAAsBpB,IAAD,iBACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACH,KAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKM,YAAL,CAAkBH,IAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKQ,YAAL,CAAkBR,IAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVF,CADD,CADH,CARF,CALF,CADF;AAwCD;;AA1FyB;;AA6F5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport http from \"./services/httpService\";\nimport config from \"./config.json\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    posts: [],\n  };\n\n  async componentDidMount() {\n    // pending > resolved (success) OR rejected (failure)\n    const { data: posts } = await http.get(config.apiEndpoint);\n    this.setState({ posts });\n  }\n\n  handleAdd = async () => {\n    const obj = { title: \"a\", body: \"b\" };\n    const { data: post } = await http.post(config.apiEndpoint, obj);\n    const posts = [post, ...this.state.posts];\n    this.setState({ posts });\n  };\n\n  handleUpdate = async (post) => {\n    post.title = \"UPDATED\";\n    await http.put(config.apiEndpoint + \"/\" + post.id, post);\n\n    const posts = [...this.state.posts];\n    const index = posts.indexOf(post);\n    posts[index] = { ...post };\n    this.setState({ posts });\n  };\n\n  handleDelete = async (post) => {\n    const orignalPosts = this.state.posts;\n\n    const posts = this.state.posts.filter((p) => p.id !== post.id);\n    this.setState({ posts });\n\n    try {\n      await http.delete(\"s\" + config.apiEndpoint + \"/\" + post.id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        alert(\"This post has already been deleted.\");\n      this.setState({ posts: orignalPosts });\n      // Expected (404: not found , 400 Bad Request) - CLIENTS ERRORS\n      //  - Display a specific error message\n      //\n      // Unexpected (network down, serve down, db down, bug)\n      //  - log them\n      //  - Display a generic and friendly error message\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\n          Add\n        </button>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Update</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.posts.map((post) => (\n              <tr key={post.id}>\n                <td>{post.title}</td>\n                <td>\n                  <button\n                    className=\"btn btn-info btn-sm\"\n                    onClick={() => this.handleUpdate(post)}\n                  >\n                    Update\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => this.handleDelete(post)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}